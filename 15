#include <iostream>
#include <sstream>
#include <cstdlib>
#include <ctime>
#include <utility>
using namespace std;

void print_pole(int array[4][4]) {
  for (int i = 0; i < 4; i++) {
    cout << " +----+----+----+----+" << endl;
    for (int j = 0; j < 4; j++) {
      if (array[i][j] < 10) {
        if (array[i][j] == 0)
          cout << " | "
               << " ";
        else
          cout << " | "
               << "0" << array[i][j];
      } else
        cout << " | " << array[i][j];
      if (array[i][j] == 0) cout << " ";
    }
    cout << " | " << endl;
  }
  cout << " +----+----+----+----+" << endl;
}
void generate_pole(int array[4][4]) {
  int k = 1;
  while (k < 16) {
    int i = rand() % 4;
    int j = rand() % 4;
    if (array[i][j] == 0) {
      array[i][j] = k;
      k++;
    }
  }
}
void vlevo(int array[4][4]) {
  bool choose = false;
  for (int i = 0; i < 4 && !choose; i++) {
    for (int j = 0; j < 4; j++) {
      if (array[i][j] == 0 && j > 0) {
        swap(array[i][j - 1], array[i][j]);
        choose = true;
        break;
      }
    }
  }
}
void right(int array[4][4]) {
  bool choose = false;
  for (int i = 0; i < 4 && !choose; i++) {
    for (int j = 0; j < 4; j++) {
      if (array[i][j] == 0 && j < 3) {
        swap(array[i][j + 1], array[i][j]);
        choose = true;
        break;
      }
    }
  }
}
void verh(int array[4][4]) {
  bool choose = false;
  for (int i = 0; i < 4 && !choose; i++) {
    for (int j = 0; j < 4; j++) {
      if (array[i][j] == 0 && i > 0) {
        swap(array[i - 1][j], array[i][j]);
        choose = true;
        break;
      }
    }
  }
}
void vniz(int array[4][4]) {
  bool choose = false;
  for (int i = 0; i < 4 && !choose; i++) {
    for (int j = 0; j < 4; j++) {
      if (array[i][j] == 0 && i < 3) {
        swap(array[i + 1][j], array[i][j]);
        choose = true;
        break;
      }
    }
  }
}
bool win(int array[4][4]) {
  int k = 1;
  for (int i = 0; i < 4; i++) {
    if (k == 15) {
      break;
    }
    for (int j = 0; j < 4; j++) {
      if (k == 15) {
        break;
      }
      if (j < 3) {
        if (array[i][j] < array[i][j + 1]) {
          k++;
        } else {
          return false;
        }
      } else if (i < 3) {
        if (array[i][j] < array[i + 1][0]) {
          k++;
        } else {
          return false;
        }
      }
    }
  }
  return true;
}
int main() {
  char op;
  int array[4][4] = {};
  srand(time(NULL));
  generate_pole(array);
  print_pole(array);
  while (cin >> op) {
    switch (op) {
      case 'l': {
        right(array);
        print_pole(array);
        if (win(array)) {
          cout << "Win" << endl;
          return -1;
        }
        break;
      }
      case 'h': {
        vlevo(array);
        print_pole(array);
        if (win(array)) {
          cout << "Win" << endl;
          return -1;
        }
        break;
      }
      case 'k': {
        verh(array);
        print_pole(array);
        if (win(array)) {
          cout << "Win" << endl;
          return -1;
        }
        break;
      }
      case 'j': {
        vniz(array);
        print_pole(array);
        if (win(array)) {
          cout << "Win" << endl;
          return -1;
        }
        break;
      }
      case 'q': {
        cout << "Game Over" << endl;
        return -1;
      }
      default: {
        cout << " Nepravelney simvol" << endl;
        break;
      }
    }
  }
}
